{
  "address": "0x0557BA881e48F32a7af0Db63ce3dFdaC20283b78",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_buffer",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_tokenManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_mintReceiver",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_zkdlpManager",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxTokenSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_marginFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarginFeeBasisPoints",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MAX_BUFFER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_FUNDING_RATE_FACTOR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRICE_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        }
      ],
      "name": "batchWithdrawFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_action",
          "type": "bytes32"
        }
      ],
      "name": "cancelAction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "clearTokenConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "disableLeverage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        }
      ],
      "name": "enableLeverage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isHandler",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isKeeper",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "marginFeeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxMarginFeeBasisPoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTokenSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "pendingActions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "processMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "redeemZkusd",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "removeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_allowStaleEquityPrice",
          "type": "bool"
        }
      ],
      "name": "setAllowStableEquity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_buffer",
          "type": "uint256"
        }
      ],
      "name": "setBuffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_bufferAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "setBufferAmounts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_handler",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setContractHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "setExternalAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_taxBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stableTaxBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_mintBurnFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_swapFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stableSwapFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_marginFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_liquidationFeeUsd",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minProfitTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_hasDynamicFees",
          "type": "bool"
        }
      ],
      "name": "setFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fundingInterval",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fundingRateFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stableFundingRateFactor",
          "type": "uint256"
        }
      ],
      "name": "setFundingRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "setGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_handler",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_inPrivateLiquidationMode",
          "type": "bool"
        }
      ],
      "name": "setInPrivateLiquidationMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_inPrivateTransferMode",
          "type": "bool"
        }
      ],
      "name": "setInPrivateTransferMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isLeverageEnabled",
          "type": "bool"
        }
      ],
      "name": "setIsLeverageEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isSwapEnabled",
          "type": "bool"
        }
      ],
      "name": "setIsSwapEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_keeper",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setKeeper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_liquidator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "setLiquidator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_marginFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMarginFeeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setMarginFeeBasisPoints",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxGasPrice",
          "type": "uint256"
        }
      ],
      "name": "setMaxGasPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "setMaxGlobalShortSize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxLeverage",
          "type": "uint256"
        }
      ],
      "name": "setMaxLeverage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minProfitTime",
          "type": "uint256"
        }
      ],
      "name": "setMinProfitTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "setPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_shouldToggleIsLeverageEnabled",
          "type": "bool"
        }
      ],
      "name": "setShouldToggleIsLeverageEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_taxBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stableTaxBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_mintBurnFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_swapFeeBasisPoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stableSwapFeeBasisPoints",
          "type": "uint256"
        }
      ],
      "name": "setSwapFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenDecimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenWeight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minProfitBps",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxZkusdAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isStable",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_isShortable",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_isEquity",
          "type": "bool"
        }
      ],
      "name": "setTokenConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "contract IVaultUtils",
          "name": "_vaultUtils",
          "type": "address"
        }
      ],
      "name": "setVaultUtils",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_zkdlpManager",
          "type": "address"
        }
      ],
      "name": "setZkdlpManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_zkusdAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "setZkusdAmounts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_zusd",
          "type": "address"
        }
      ],
      "name": "setZusd",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shouldToggleIsLeverageEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "signalApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "signalMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "signalRedeemZkusd",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_gov",
          "type": "address"
        }
      ],
      "name": "signalSetGov",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_handler",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isActive",
          "type": "bool"
        }
      ],
      "name": "signalSetHandler",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "signalSetPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "signalWithdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferIn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "zkusdAmount",
          "type": "uint256"
        }
      ],
      "name": "updateZkusdSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "withdrawFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zkdlpManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6178b8ff7f6e68042f7fa84d9e94923fde53f3c4d97e8175a5d7a1163433c507",
  "receipt": {
    "to": null,
    "from": "0xafc183BE937367B219F9283916d352f2C03ff512",
    "contractAddress": "0x0557BA881e48F32a7af0Db63ce3dFdaC20283b78",
    "transactionIndex": 0,
    "gasUsed": "4674307",
    "logsBloom": "0x
    "blockHash": "0xcafe8854e03d8241a7e482ce9fa66537fe7e967bf477532fa96cc2a623b0d181",
    "transactionHash": "0x6178b8ff7f6e68042f7fa84d9e94923fde53f3c4d97e8175a5d7a1163433c507",
    "logs": [],
    "blockNumber": 2785906,
    "cumulativeGasUsed": "4674307",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xafc183BE937367B219F9283916d352f2C03ff512",
    60,
    "0x0000000000000000000000000000000000000000",
    "0xafc183BE937367B219F9283916d352f2C03ff512",
    "0xafc183BE937367B219F9283916d352f2C03ff512",
    "1000000000000000000000",
    5,
    500
  ],
  "numDeployments": 1,
  "solcInputHash": "dfd549272a67d32b40d2afebc3e64372",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_buffer\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mintReceiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zkdlpManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxTokenSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marginFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarginFeeBasisPoints\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MAX_BUFFER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FUNDING_RATE_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"batchWithdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_action\",\"type\":\"bytes32\"}],\"name\":\"cancelAction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"clearTokenConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"disableLeverage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"}],\"name\":\"enableLeverage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isHandler\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isKeeper\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marginFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxMarginFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pendingActions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"processMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"redeemZkusd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_allowStaleEquityPrice\",\"type\":\"bool\"}],\"name\":\"setAllowStableEquity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_buffer\",\"type\":\"uint256\"}],\"name\":\"setBuffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_bufferAmounts\",\"type\":\"uint256[]\"}],\"name\":\"setBufferAmounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_handler\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setContractHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setExternalAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_taxBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableTaxBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mintBurnFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_swapFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableSwapFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_marginFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidationFeeUsd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minProfitTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_hasDynamicFees\",\"type\":\"bool\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fundingInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fundingRateFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableFundingRateFactor\",\"type\":\"uint256\"}],\"name\":\"setFundingRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"setGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_handler\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_inPrivateLiquidationMode\",\"type\":\"bool\"}],\"name\":\"setInPrivateLiquidationMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_inPrivateTransferMode\",\"type\":\"bool\"}],\"name\":\"setInPrivateTransferMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLeverageEnabled\",\"type\":\"bool\"}],\"name\":\"setIsLeverageEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isSwapEnabled\",\"type\":\"bool\"}],\"name\":\"setIsSwapEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_keeper\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setKeeper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_liquidator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"setLiquidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marginFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMarginFeeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setMarginFeeBasisPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxGasPrice\",\"type\":\"uint256\"}],\"name\":\"setMaxGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMaxGlobalShortSize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxLeverage\",\"type\":\"uint256\"}],\"name\":\"setMaxLeverage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minProfitTime\",\"type\":\"uint256\"}],\"name\":\"setMinProfitTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_shouldToggleIsLeverageEnabled\",\"type\":\"bool\"}],\"name\":\"setShouldToggleIsLeverageEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_taxBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableTaxBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mintBurnFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_swapFeeBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stableSwapFeeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setSwapFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenDecimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minProfitBps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxZkusdAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isStable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_isShortable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_isEquity\",\"type\":\"bool\"}],\"name\":\"setTokenConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"contract IVaultUtils\",\"name\":\"_vaultUtils\",\"type\":\"address\"}],\"name\":\"setVaultUtils\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_zkdlpManager\",\"type\":\"address\"}],\"name\":\"setZkdlpManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_zkusdAmounts\",\"type\":\"uint256[]\"}],\"name\":\"setZkusdAmounts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_zusd\",\"type\":\"address\"}],\"name\":\"setZusd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldToggleIsLeverageEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"signalApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"signalMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"signalRedeemZkusd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gov\",\"type\":\"address\"}],\"name\":\"signalSetGov\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_handler\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isActive\",\"type\":\"bool\"}],\"name\":\"signalSetHandler\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"signalSetPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"signalWithdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferIn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"zkusdAmount\",\"type\":\"uint256\"}],\"name\":\"updateZkusdSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"zkdlpManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/peripherals/Timelock.sol\":\"Timelock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/access/interfaces/IAdmin.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.6.12;\\ninterface IAdmin {\\n    function setAdmin(address _admin) external;\\n}\\n\",\"keccak256\":\"0xe25a8d86624382690388460f64fc74b111d31ea87f8c5875cd11cbf2aab44d0c\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\nimport \\\"./IVaultUtils.sol\\\";\\ninterface IVault {\\n    function withdrawFees(address _token, address _receiver) external returns (uint256);\\n    function directPoolDeposit(address _token) external;\\n    function buyZKUSD(address _token, address _receiver) external returns (uint256);\\n    function sellZKUSD(address _token, address _receiver) external returns (uint256);\\n    function swap(address _tokenIn, address _tokenOut, address _receiver) external returns (uint256);\\n    function increasePosition(\\n        address _account, address _collateralToken,\\n        address _indexToken, uint256 _sizeDelta, bool _isLong) external;\\n    function decreasePosition(\\n        address _account, address _collateralToken,\\n        address _indexToken, uint256 _collateralDelta,\\n        uint256 _sizeDelta, bool _isLong, address _receiver) external returns (uint256);\\n    function validateLiquidation(\\n        address _account, address _collateralToken,\\n        address _indexToken, bool _isLong, bool _raise) external view returns (uint256, uint256);\\n    function liquidatePosition(\\n        address _account, address _collateralToken,\\n        address _indexToken, bool _isLong, address _feeReceiver) external returns (uint256);\\n\\n    function tokenToUsdMin(address _token, uint256 _tokenAmount) external view returns (uint256);\\n    function priceFeed() external view returns (address);\\n    function fundingRateFactor() external view returns (uint256);\\n    function stableFundingRateFactor() external view returns (uint256);\\n    function cumulativeFundingRates(address _token) external view returns (uint256);\\n    function getNextFundingRate(address _token) external view returns (uint256);\\n    function getFeeBasisPoints(\\n        address _token, uint256 _zkusdDelta,\\n        uint256 _feeBasisPoints, uint256 _taxBasisPoints, bool _increment) external view returns (uint256);\\n    function liquidationFeeUsd() external view returns (uint256);\\n    function taxBasisPoints() external view returns (uint256);\\n    function stableTaxBasisPoints() external view returns (uint256);\\n    function mintBurnFeeBasisPoints() external view returns (uint256);\\n    function swapFeeBasisPoints() external view returns (uint256);\\n    function stableSwapFeeBasisPoints() external view returns (uint256);\\n    function marginFeeBasisPoints() external view returns (uint256);\\n    function allWhitelistedTokensLength() external view returns (uint256);\\n    function allWhitelistedTokens(uint256) external view returns (address);\\n    function whitelistedTokens(address _token) external view returns (bool);\\n    function stableTokens(address _token) external view returns (bool);\\n    function shortableTokens(address _token) external view returns (bool);\\n    function equityTokens(address _token) external view returns (bool);\\n    function feeReserves(address _token) external view returns (uint256);\\n    function globalShortSizes(address _token) external view returns (uint256);\\n    function globalShortAveragePrices(address _token) external view returns (uint256);\\n    function maxGlobalShortSizes(address _token) external view returns (uint256);\\n    function tokenDecimals(address _token) external view returns (uint256);\\n    function tokenWeights(address _token) external view returns (uint256);\\n    function guaranteedUsd(address _token) external view returns (uint256);\\n    function poolAmounts(address _token) external view returns (uint256);\\n    function bufferAmounts(address _token) external view returns (uint256);\\n    function reservedAmounts(address _token) external view returns (uint256);\\n    function zkusdAmounts(address _token) external view returns (uint256);\\n    function maxZkusdAmounts(address _token) external view returns (uint256);\\n    function getRedemptionAmount(address _token, uint256 _zkusdAmount) external view returns (uint256);\\n    function getMaxPrice(address _token) external view returns (uint256);\\n    function getMinPrice(address _token) external view returns (uint256);\\n    function getDelta(\\n        address _indexToken, uint256 _size,\\n        uint256 _averagePrice, bool _isLong, uint256 _lastIncreasedTime) external view returns (bool, uint256);\\n    function getPosition(\\n        address _account, address _collateralToken,\\n        address _indexToken, bool _isLong) external view returns (uint256, uint256, uint256, uint256, uint256, uint256, bool, uint256);\\n    function isPositionExist(address _account, address _collateralToken, address _indexToken, bool _isLong) external view returns (bool, bytes32);\\n    function isInitialized() external view returns (bool);\\n    function isSwapEnabled() external view returns (bool);\\n    function isLeverageEnabled() external view returns (bool);\\n    function router() external view returns (address);\\n    function zkusd() external view returns (address);\\n    function gov() external view returns (address);\\n    function whitelistedTokenCount() external view returns (uint256);\\n    function maxLeverage() external view returns (uint256);\\n    function minProfitTime() external view returns (uint256);\\n    function hasDynamicFees() external view returns (bool);\\n    function fundingInterval() external view returns (uint256);\\n    function totalTokenWeights() external view returns (uint256);\\n    function getTargetZkusdAmount(address _token) external view returns (uint256);\\n    function inManagerMode() external view returns (bool);\\n    function inPrivateLiquidationMode() external view returns (bool);\\n    function maxGasPrice() external view returns (uint256);\\n    function approvedRouters(address _account, address _router) external view returns (bool);\\n    function isLiquidator(address _account) external view returns (bool);\\n    function isManager(address _account) external view returns (bool);\\n    function minProfitBasisPoints(address _token) external view returns (uint256);\\n    function tokenBalances(address _token) external view returns (uint256);\\n    function lastFundingTimes(address _token) external view returns (uint256);\\n\\n    function setMaxLeverage(uint256 _maxLeverage) external;\\n    function setInManagerMode(bool _inManagerMode) external;\\n    function setManager(address _manager, bool _isManager) external;\\n    function setIsSwapEnabled(bool _isSwapEnabled) external;\\n    function setIsLeverageEnabled(bool _isLeverageEnabled) external;\\n    function setMaxGasPrice(uint256 _maxGasPrice) external;\\n    function setZkusdAmount(address _token, uint256 _amount) external;\\n    function setBufferAmount(address _token, uint256 _amount) external;\\n    function setMaxGlobalShortSize(address _token, uint256 _amount) external;\\n    function setInPrivateLiquidationMode(bool _inPrivateLiquidationMode) external;\\n    function setLiquidator(address _liquidator, bool _isActive) external;\\n    function setFundingRate(\\n        uint256 _fundingInterval, uint256 _fundingRateFactor,\\n        uint256 _stableFundingRateFactor) external;\\n    function setFees(\\n        uint256 _taxBasisPoints, uint256 _stableTaxBasisPoints,\\n        uint256 _mintBurnFeeBasisPoints, uint256 _swapFeeBasisPoints,\\n        uint256 _stableSwapFeeBasisPoints, uint256 _marginFeeBasisPoints,\\n        uint256 _liquidationFeeUsd, uint256 _minProfitTime, bool _hasDynamicFees) external;\\n\\n    function setTokenConfig(\\n        address _token, uint256 _tokenDecimals,\\n        uint256 _redemptionBps, uint256 _minProfitBps,\\n        uint256 _maxZkusdAmount, bool _isStable,\\n        bool _isShortable, bool _isEquity) external;\\n    function clearTokenConfig(address _token) external;\\n    function setMinProfitTime(uint256 _minProfitTime) external;\\n    function setPriceFeed(address _priceFeed) external;\\n    function setVaultUtils(IVaultUtils _vaultUtils) external;\\n    function setError(uint256 _errorCode, string calldata _error) external;\\n    function setAllowStableEquity(bool _allowStaleEquityPrice) external;\\n    function setZusd(address _zusd) external;\\n}\\n\",\"keccak256\":\"0x587c5b16943638d27fb509c86c7216268ca157fe5decf6654d868c64adf14539\",\"license\":\"MIT\"},\"contracts/core/interfaces/IVaultUtils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface IVaultUtils {\\n    function updateCumulativeFundingRate(\\n        address _collateralToken, address _indexToken) external returns (bool);\\n    function validateIncreasePosition(\\n        address _account, address _collateralToken,\\n        address _indexToken, uint256 _sizeDelta, bool _isLong) external view;\\n    function validateDecreasePosition(\\n        address _account, address _collateralToken,\\n        address _indexToken, uint256 _collateralDelta,\\n        uint256 _sizeDelta, bool _isLong, address _receiver) external view;\\n    function validateLiquidation(\\n        address _account, address _collateralToken,\\n        address _indexToken, bool _isLong, bool _raise) external view returns (uint256, uint256);\\n    function getEntryFundingRate(\\n        address _collateralToken, address _indexToken, bool _isLong) external view returns (uint256);\\n    function getPositionFee(\\n        address _account, address _collateralToken,\\n        address _indexToken, bool _isLong, uint256 _sizeDelta) external view returns (uint256);\\n    function getFundingFee(\\n        address _account, address _collateralToken,\\n        address _indexToken, bool _isLong,\\n        uint256 _size, uint256 _entryFundingRate) external view returns (uint256);\\n    function getBuyZkusdFeeBasisPoints(\\n        address _token, uint256 _zkusdAmount) external view returns (uint256);\\n    function getSellZkusdFeeBasisPoints(\\n        address _token, uint256 _zkusdAmount) external view returns (uint256);\\n    function getSwapFeeBasisPoints(\\n        address _tokenIn, address _tokenOut, uint256 _zkusdAmount) external view returns (uint256);\\n    function getFeeBasisPoints(\\n        address _token, uint256 _zkusdDelta,\\n        uint256 _feeBasisPoints, uint256 _taxBasisPoints,\\n        bool _increment) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x1efeae040950453176db5cf84c290223d6ebd4542e7457c7fe35c0d023483522\",\"license\":\"MIT\"},\"contracts/core/interfaces/IZkdlpManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface IZkdlpManager {\\n    function zkUsd() external view returns (address);\\n    function cooldownDuration() external returns (uint256);\\n    function getAumInZkusd(bool maximise) external view returns (uint256);\\n    function lastAddedAt(address _account) external returns (uint256);\\n//    function addLiquidity(\\n//        address _token, uint256 _amount,\\n//        uint256 _minZkusd, uint256 _minZkdlp) external returns (uint256);\\n    function addLiquidityForAccount(\\n        address _fundingAccount, address _account,\\n        address _token, uint256 _amount,\\n        uint256 _minZkusd, uint256 _minZkdlp) external returns (uint256);\\n//    function removeLiquidity(\\n//        address _tokenOut, uint256 _zkdlpAmount,\\n//        uint256 _minOut, address _receiver) external returns (uint256);\\n    function removeLiquidityForAccount(\\n        address _account, address _tokenOut,\\n        uint256 _zkdlpAmount, uint256 _minOut, address _receiver) external returns (uint256);\\n}\\n\",\"keccak256\":\"0x65f7f6570436a559ac9ab146c5caccb5b1743496d06bc4ecccaf4abe5b19f026\",\"license\":\"MIT\"},\"contracts/core/storage/TimelockStorage.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.6.0;\\n\\nimport \\\"../../peripherals/interfaces/ITimelockTarget.sol\\\";\\nimport \\\"../../peripherals/interfaces/ITimelock.sol\\\";\\nimport \\\"../../peripherals/interfaces/IHandlerTarget.sol\\\";\\nimport \\\"../../access/interfaces/IAdmin.sol\\\";\\nimport \\\"../../core/interfaces/IVault.sol\\\";\\nimport \\\"../../core/interfaces/IVaultUtils.sol\\\";\\nimport \\\"../../core/interfaces/IZkdlpManager.sol\\\";\\nimport \\\"../../tokens/interfaces/IYieldToken.sol\\\";\\nimport \\\"../../tokens/interfaces/IBaseToken.sol\\\";\\nimport \\\"../../tokens/interfaces/IMintable.sol\\\";\\nimport \\\"../../tokens/interfaces/IZKUSD.sol\\\";\\nimport \\\"../../libraries/token/IERC20.sol\\\";\\nimport \\\"../../libraries/math/SafeMath.sol\\\";\\nimport \\\"../../libraries/Events.sol\\\";\\nimport \\\"../../libraries/Errors.sol\\\";\\n\\nabstract contract TimelockStorage is ITimelock {\\n    uint256 public constant PRICE_PRECISION = 10 ** 30;\\n    uint256 public constant MAX_BUFFER = 5 days;\\n    uint256 public constant MAX_FUNDING_RATE_FACTOR = 10000; // 1%\\n    uint256 public buffer;\\n    uint256 public maxTokenSupply;\\n    uint256 public marginFeeBasisPoints;\\n    uint256 public maxMarginFeeBasisPoints;\\n    bool public shouldToggleIsLeverageEnabled;\\n    address public admin;\\n    address public tokenManager;\\n    address public mintReceiver;\\n    address public zkdlpManager;\\n    mapping(bytes32 => uint256) public pendingActions;\\n    mapping(address => bool) public isHandler;\\n    mapping(address => bool) public isKeeper;\\n    using SafeMath for uint256;\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"Timelock: forbidden\\\");\\n        _;\\n    }\\n    modifier onlyHandlerAndAbove() {\\n        require(msg.sender == admin || isHandler[msg.sender], \\\"Timelock: forbidden\\\");\\n        _;\\n    }\\n    modifier onlyKeeperAndAbove() {\\n        require(msg.sender == admin || isHandler[msg.sender] || isKeeper[msg.sender], \\\"Timelock: forbidden\\\");\\n        _;\\n    }\\n    modifier onlyTokenManager() {\\n        require(msg.sender == tokenManager, \\\"Timelock: forbidden\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0xfef4c342014b7d436659a8d6f45723f506fa9a8ff88dd98b6375c8b4e32037e7\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Errors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\nlibrary Errors {\\n    /* Timelock Error Message*/\\n    string public constant Timelock_Invalid_Target = \\\"Timelock: invalid _target\\\";\\n    string public constant Timelock_Invalid_Buffer = \\\"Timelock: invalid _buffer\\\";\\n    string public constant Timelock_Buffer_Cannot_Be_Decreased = \\\"Timelock: buffer cannot be decreased\\\";\\n    string public constant Timelock_invalid_maxLeverage = \\\"Timelock: invalid _maxLeverage\\\";\\n    string public constant Timelock_invalid_fundingRateFactor = \\\"Timelock: invalid _fundingRateFactor\\\";\\n    string public constant Timelock_invalid_stableFundingRateFactor = \\\"Timelock: invalid _stableFundingRateFactor\\\";\\n    string public constant TIMELOCK_INVALID_MAXGASPRICE = \\\"Invalid _maxGasPrice\\\";\\n    string public constant TIMELOCK_INVALID_LENGTHS = \\\"Timelock: invalid lengths\\\";\\n    string public constant TIMELOCK_MAXTOKENSUPPLY_EXCEEDED = \\\"Timelock: maxTokenSupply exceeded\\\";\\n    string public constant TIMELOCK_ACTION_ALREADY_SIGNALLED = \\\"Timelock: action already signalled\\\";\\n    string public constant TIMELOCK_ACTION_NOT_SIGNALLED = \\\"Timelock: action not signalled\\\";\\n    string public constant TIMELOCK_ACTION_TIME_NOT_YET_PASSED = \\\"Timelock: action time not yet passed\\\";\\n    string public constant TIMELOCK_INVALID_ACTION = \\\"Timelock: invalid _action\\\";\\n    string public constant TIMELOCK_INVALID_BUFFER = \\\"Timelock: invalid _buffer\\\";\\n    /* ZKUSD.sol*/\\n    string public constant ZKUSD_FORBIDDEN = \\\"ZKUSD: forbidden\\\";\\n    /* BasePositionManagers.sol */\\n    string public constant BASEPOSITIONMANAGER_MARK_PRICE_LOWER_THAN_LIMIT      = \\\"BasePositionManager: mark price lower than limit\\\";\\n    string public constant BASEPOSITIONMANAGER_MARK_PRICE_HIGHER_THAN_LIMIT     = \\\"BasePositionManager: mark price higher than limit\\\";\\n    string public constant BASEPOSITIONMANAGER_INVALID_PATH_LENGTH              = \\\"BasePositionManager: invalid _path.length\\\";\\n    string public constant BASEPOSITIONMANAGER_INSUFFICIENT_AMOUNTOUT           = \\\"BasePositionManager: insufficient amountOut\\\";\\n    string public constant BASEPOSITIONMANAGER_MAX_GLOBAL_LONGS_EXCEEDED        = \\\"BasePositionManager: max global longs exceeded\\\";\\n    string public constant BASEPOSITIONMANAGER_MAX_GLOBAL_SHORTS_EXCEEDED       = \\\"BasePositionManager: max global shorts exceeded\\\";\\n    string public constant BASEPOSITIONMANAGER_INVALID_SENDER                   = \\\"BasePositionManager: invalid sender\\\";\\n    string public constant BASEPOSITIONMANAGER_TRANSFER_OUT_FAILED              = \\\"BasePositionManager: failed to transfer out ether\\\";\\n    /* PositionManager.sol */\\n    string public constant POSITIONMANAGER_INVALID_PATH_LENGTH                  = \\\"PositionManager: invalid _path.length\\\";\\n    string public constant POSITIONMANAGER_INVALID_PATH                         = \\\"PositionManager: invalid _path\\\";\\n    string public constant POSITIONMANAGER_LONG_DEPOSIT                         = \\\"PositionManager: long deposit\\\";\\n    string public constant POSITIONMANAGER_LONG_LEVERAGE_DECREASE               = \\\"PositionManager: long leverage decrease\\\";\\n    string public constant POSITIONMANAGER_FORBIDDEN                            = \\\"PositionManager: forbidden\\\";\\n    string public constant POSITIONMANAGER_INSUFFICIENT_FEE                     = \\\"PositionManager: insufficient fee\\\";\\n    /* Router.sol*/\\n    string public constant ROUTER_FORBIDDEN                                     = \\\"Router: forbidden\\\";\\n    /* ZkdlpManager.sol */\\n    string public constant ZKDLPMANAGER_ACTION_NOT_ENABLED                      = \\\"ZkdlpManager: action not enabled\\\";\\n    string public constant ZKDLPMANAGER_INVALID_WEIGHT                          = \\\"ZkdlpManager: invalid weight\\\";\\n    string public constant ZKDLPMANAGER_INVALID_COOLDOWNDURATION                = \\\"ZkdlpManager: invalid _cooldownDuration\\\";\\n    string public constant ZKDLPMANAGER_INVALID_AMOUNT                          = \\\"ZkdlpManager: invalid _amount\\\";\\n    string public constant ZKDLPMANAGER_INSUFFICIENT_ZKUSD_OUTPUT               = \\\"ZkdlpManager: insufficient ZKUSD output\\\";\\n    string public constant ZKDLPMANAGER_INSUFFICIENT_ZKDLP_OUTPUT               = \\\"ZkdlpManager: insufficient ZKDLP output\\\";\\n    string public constant ZKDLPMANAGER_INVALID_ZKDLPAMOUNT                     = \\\"ZkdlpManager: invalid _ZKDLPAmount\\\";\\n    string public constant ZKDLPMANAGER_COOLDOWN_DURATION_NOT_YET_PASSED        = \\\"ZkdlpManager: cooldown duration not yet passed\\\";\\n    string public constant ZKDLPMANAGER_INSUFFICIENT_OUTPUT                     = \\\"ZkdlpManager: insufficient output\\\";\\n    string public constant ZKDLPMANAGER_FORBIDDEN                               = \\\"ZkdlpManager: forbidden\\\";\\n    /* ShortsTrack.sol*/\\n    string public constant SHORTSTRACKER_FORBIDDEN                              = \\\"ShortsTracker: forbidden\\\";\\n    string public constant SHORTSTRACKER_INVALID_HANDLER                        = \\\"ShortsTracker: invalid _handler\\\";\\n    string public constant SHORTSTRACKER_ALREADY_MIGRATED                       = \\\"ShortsTracker: already migrated\\\";\\n    string public constant SHORTSTRACKER_OVERFLOW                               = \\\"ShortsTracker: overflow\\\";\\n    /* VaultUtils.sol*/\\n    string public constant VAULT_LOSSES_EXCEED_COLLATERAL                       = \\\"Vault: losses exceed collateral\\\";\\n    string public constant VAULT_FEES_EXCEED_COLLATERAL                         = \\\"Vault: fees exceed collateral\\\";\\n    string public constant VAULT_LIQUIDATION_FEES_EXCEED_COLLATERAL             = \\\"Vault: liquidation fees exceed collateral\\\";\\n    string public constant VAULT_MAXLEVERAGE_EXCEEDED                           = \\\"Vault: maxLeverage exceeded\\\";\\n    /* VaultInternal.sol*/\\n    string internal constant VAULT_POOLAMOUNT_EXCEEDED                          = \\\"Vault: poolAmount exceeded\\\";\\n    string internal constant VAULT_INSUFFICIENT_RESERVE                         = \\\"Vault: insufficient reserve\\\";\\n    string internal constant VAULT_MAX_SHORTS_EXCEEDED                          = \\\"Vault: max shorts exceeded\\\";\\n    string internal constant VAULT_POOLAMOUNT_BUFFER                            = \\\"Vault: poolAmount < buffer\\\";\\n    string internal constant VAULT_INVALID_ERRORCONTROLLER                      = \\\"Vault: invalid errorController\\\";\\n    /* Router.sol */\\n    string internal constant ROUTER_INVALID_SENDER                              = \\\"Router: invalid sender\\\";\\n    string internal constant ROUTER_INVALID_PATH                                = \\\"Router: invalid _path\\\";\\n    string internal constant ROUTER_MARK_PRICE_HIGHER_THAN_LIMIT                = \\\"Router: mark price higher than limit\\\";\\n    string internal constant ROUTER_MARK_PRICE_LOWER_THAN_LIMIT                 = \\\"Router: mark price lower than limit\\\";\\n    string internal constant ROUTER_INVALID_PATH_LENGTH                         = \\\"Router: invalid _path.length\\\";\\n    string internal constant ROUTER_INSUFFICIENT_AMOUNTOUT                      = \\\"Router: insufficient amountOut\\\";\\n    string internal constant ROUTER_INVALID_PLUGIN                              = \\\"Router: invalid plugin\\\";\\n    /* OrderBook.sol*/\\n    string internal constant ORDERBOOK_FORBIDDEN                                = \\\"OrderBook: forbidden\\\";\\n    string internal constant ORDERBOOK_ALREADY_INITIALIZED                      = \\\"OrderBook: already initialized\\\";\\n    string internal constant ORDERBOOK_INVALID_SENDER                           = \\\"OrderBook: invalid sender\\\";\\n    string internal constant ORDERBOOK_INVALID_PATH_LENGTH                      = \\\"OrderBook: invalid _path.length\\\";\\n    string internal constant ORDERBOOK_INVALID_PATH                             = \\\"OrderBook: invalid _path\\\";\\n    string internal constant ORDERBOOK_INVALID_AMOUNTIN                         = \\\"OrderBook: invalid _amountIn\\\";\\n    string internal constant ORDERBOOK_INSUFFICIENT_EXECUTION_FEE               = \\\"OrderBook: insufficient execution fee\\\";\\n    string internal constant ORDERBOOK_ONLY_WETH_COULD_BE_WRAPPED               = \\\"OrderBook: only weth could be wrapped\\\";\\n    string internal constant ORDERBOOK_INCORRECT_VALUE_TRANSFERRED              = \\\"OrderBook: incorrect value transferred\\\";\\n    string internal constant ORDERBOOK_INCORRECT_EXECUTION_FEE_TRANSFERRED      = \\\"OrderBook: incorrect execution fee transferred\\\";\\n    string internal constant ORDERBOOK_NON_EXISTENT_ORDER                       = \\\"OrderBook: non-existent order\\\";\\n    string internal constant ORDERBOOK_INVALID_PRICE_FOR_EXECUTION              = \\\"OrderBook: invalid price for execution\\\";\\n    string internal constant ORDERBOOK_INSUFFICIENT_COLLATERAL                  = \\\"OrderBook: insufficient collateral\\\";\\n    string internal constant ORDERBOOK_INSUFFICIENT_AMOUNTOUT                   = \\\"OrderBook: insufficient amountOut\\\";\\n    /* RewardRouterV2.sol */\\n    string internal constant REWARDROUTER_INVALID_AMOUNT                        = \\\"RewardRouter: invalid _amount\\\";\\n    string internal constant REWARDROUTER_INVALID_MSG_VALUE                     = \\\"RewardRouter: invalid msg.value\\\";\\n    string internal constant REWARDROUTER_ALREADY_INITIALIZED                   = \\\"RewardRouter: already initialized\\\";\\n    string internal constant REWARDROUTER_INVALID_ZKUSDAMOUNT                   = \\\"RewardRouter: invalid _zkusdAmount\\\";\\n\\n    /* YieldToken.sol */\\n    string public constant YIELDTOKEN_ACCOUNT_ALREADY_MARKED                    = \\\"YieldToken: _account already marked\\\";\\n    string public constant YIELDTOKEN_ACCOUNT_NOT_MARKED                        = \\\"YieldToken: _account not marked\\\";\\n    string public constant YIELDTOKEN_TRANSFER_AMOUNT_EXCEEDS_ALLOWANCE         = \\\"YieldToken: transfer amount exceeds allowance\\\";\\n    string public constant YIELDTOKEN_MINT_TO_THE_ZERO_ADDRESS                  = \\\"YieldToken: mint to the zero address\\\";\\n    string public constant YIELDTOKEN_BURN_FROM_THE_ZERO_ADDRESS                = \\\"YieldToken: burn from the zero address\\\";\\n    string public constant YIELDTOKEN_BURN_AMOUNT_EXCEEDS_BALANCE               = \\\"YieldToken: burn amount exceeds balance\\\";\\n    string public constant YIELDTOKEN_TRANSFER_FROM_THE_ZERO_ADDRESS            = \\\"YieldToken: transfer from the zero address\\\";\\n    string public constant YIELDTOKEN_TRANSFER_TO_THE_ZERO_ADDRESS              = \\\"YieldToken: transfer to the zero address\\\";\\n    string public constant YIELDTOKEN_MSG_SENDER_NOT_WHITELISTED                = \\\"YieldToken: msg.sender not whitelisted\\\";\\n    string public constant YIELDTOKEN_TRANSFER_AMOUNT_EXCEEDS_BALANCE           = \\\"YieldToken: transfer amount exceeds balance\\\";\\n    string public constant YIELDTOKEN_APPROVE_FROM_THE_ZERO_ADDRESS             = \\\"YieldToken: approve from the zero address\\\";\\n    string public constant YIELDTOKEN_APPROVE_TO_THE_ZERO_ADDRESS               = \\\"YieldToken: approve to the zero address\\\";\\n\\n    string public constant MINTABLEBASETOKEN_FORBIDDEN                          = \\\"MintableBaseToken: forbidden\\\";\\n    string public constant BASETOKEN_FORBIDDEN                                  = \\\"BaseToken: forbidden\\\";\\n    string public constant BASETOKEN_ACCOUNT_ALREADY_MARKED                     = \\\"BaseToken: _account already marked\\\";\\n    string public constant BASETOKEN_ACCOUNT_NOT_MARKED                         = \\\"BaseToken: _account not marked\\\";\\n    string public constant BASETOKEN_TRANSFER_AMOUNT_EXCEEDS_ALLOWANCE          = \\\"BaseToken: transfer amount exceeds allowance\\\";\\n    string public constant BASETOKEN_MINT_TO_THE_ZERO_ADDRESS                   = \\\"BaseToken: mint to the zero address\\\";\\n    string public constant BASETOKEN_BURN_FROM_THE_ZERO_ADDRESS                 = \\\"BaseToken: burn from the zero address\\\";\\n    string public constant BASETOKEN_BURN_AMOUNT_EXCEEDS_BALANCE                = \\\"BaseToken: burn amount exceeds balance\\\";\\n    string public constant BASETOKEN_TRANSFER_FROM_THE_ZERO_ADDRESS             = \\\"BaseToken: transfer from the zero address\\\";\\n    string public constant BASETOKEN_TRANSFER_TO_THE_ZERO_ADDRESS               = \\\"BaseToken: transfer to the zero address\\\";\\n    string public constant BASETOKEN_MSG_SENDER_NOT_WHITELISTED                 = \\\"BaseToken: msg.sender not whitelisted\\\";\\n    string public constant BASETOKEN_TRANSFER_AMOUNT_EXCEEDS_BALANCE            = \\\"BaseToken: transfer amount exceeds balance\\\";\\n    string public constant BASETOKEN_APPROVE_FROM_THE_ZERO_ADDRESS              = \\\"BaseToken: approve from the zero address\\\";\\n    string public constant BASETOKEN_APPROVE_TO_THE_ZERO_ADDRESS                = \\\"BaseToken: approve to the zero address\\\";\\n}\\n\",\"keccak256\":\"0x05483ba94e083a7e9f288fa9e1ea4d0961880cf669c779b8ad46747b205615d8\",\"license\":\"MIT\"},\"contracts/libraries/Events.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\nlibrary Events {\\n    /* BasePositionManager Events */\\n    event SetDepositFee(uint256 depositFee);\\n    event SetIncreasePositionBufferBps(uint256 increasePositionBufferBps);\\n    event SetAdmin(address admin);\\n    event WithdrawFees(address token, address receiver, uint256 amount);\\n    event SetMaxGlobalSizes(address[] tokens, uint256[] longSizes, uint256[] shortSizes);\\n    /*Position Manager Events*/\\n    event SetOrderKeeper(address indexed account, bool isActive);\\n    event SetLiquidator(address indexed account, bool isActive);\\n    event SetPartner(address account, bool isActive);\\n    event SetOpened(bool opened);\\n    event SetShouldValidateIncreaseOrder(bool shouldValidateIncreaseOrder);\\n    /* Orderbook.sol events */\\n    event CreateSwapOrder(\\n        address indexed account, uint256 orderIndex,\\n        address[] path, uint256 amountIn, uint256 minOut,\\n        uint256 triggerRatio, bool triggerAboveThreshold, bool shouldUnwrap, uint256 executionFee);\\n    event CancelSwapOrder(\\n        address indexed account, uint256 orderIndex,\\n        address[] path, uint256 amountIn, uint256 minOut,\\n        uint256 triggerRatio, bool triggerAboveThreshold, bool shouldUnwrap, uint256 executionFee);\\n    event UpdateSwapOrder(\\n        address indexed account, uint256 ordexIndex, address[] path, uint256 amountIn, uint256 minOut, uint256 triggerRatio, bool triggerAboveThreshold, bool shouldUnwrap, uint256 executionFee);\\n    event ExecuteSwapOrder(\\n        address indexed account, uint256 orderIndex,\\n        address[] path, uint256 amountIn, uint256 minOut,\\n        uint256 amountOut, uint256 triggerRatio,\\n        bool triggerAboveThreshold, bool shouldUnwrap, uint256 executionFee);\\n    event Initialize(\\n        address router, address vault, address weth,\\n        address zkusd, uint256 minExecutionFee);\\n    event UpdateMinExecutionFee(uint256 minExecutionFee);\\n    event UpdateGov(address gov);\\n    /* Router.sol events*/\\n    event Swap(address account, address tokenIn, address tokenOut, uint256 amountIn, uint256 amountOut);\\n    /* ShortsTracker.sol events*/\\n    event GlobalShortDataUpdated(address indexed token, uint256 globalShortSize, uint256 globalShortAveragePrice);\\n    /* Vault.sol events */\\n    event BuyZKUSD(\\n        address account, address token,\\n        uint256 tokenAmount, uint256 zkusdAmount, uint256 feeBasisPoints);\\n    event SellZKUSD(\\n        address account, address token,\\n        uint256 zkusdAmount, uint256 tokenAmount, uint256 feeBasisPoints);\\n    event Swap(\\n        address account, address tokenIn,\\n        address tokenOut, uint256 amountIn,\\n        uint256 amountOut, uint256 amountOutAfterFees,\\n        uint256 feeBasisPoints);\\n    event IncreasePosition(\\n        bytes32 key, address account,\\n        address collateralToken, address indexToken,\\n        uint256 collateralDelta, uint256 sizeDelta,\\n        bool isLong, uint256 price, uint256 fee);\\n    event DecreasePosition(\\n        bytes32 key, address account,\\n        address collateralToken, address indexToken,\\n        uint256 collateralDelta, uint256 sizeDelta,\\n        bool isLong, uint256 price, uint256 fee);\\n    event LiquidatePosition(\\n        bytes32 key, address account, address collateralToken,\\n        address indexToken, bool isLong, uint256 size,\\n        uint256 collateral, uint256 reserveAmount, int256 realisedPnl, uint256 markPrice);\\n    event UpdatePosition(\\n        bytes32 key, uint256 size, uint256 collateral,\\n        uint256 averagePrice, uint256 entryFundingRate,\\n        uint256 reserveAmount, int256 realisedPnl, uint256 markPrice);\\n    event ClosePosition(\\n        bytes32 key, uint256 size, uint256 collateral,\\n        uint256 averagePrice, uint256 entryFundingRate, uint256 reserveAmount, int256 realisedPnl);\\n    event UpdateTokenPnl(address token, int256 realisedPnl);\\n    event UpdateFundingRate(address token, uint256 fundingRate);\\n    event UpdatePnl(bytes32 key, bool hasProfit, uint256 delta);\\n    event CollectSwapFees(address token, uint256 feeUsd, uint256 feeTokens);\\n    event CollectMarginFees(address token, uint256 feeUsd, uint256 feeTokens);\\n    event DirectPoolDeposit(address token, uint256 amount);\\n    event IncreasePoolAmount(address token, uint256 amount);\\n    event DecreasePoolAmount(address token, uint256 amount);\\n    event IncreaseZkusdAmount(address token, uint256 amount);\\n    event DecreaseZkusdAmount(address token, uint256 amount);\\n    event IncreaseReservedAmount(address token, uint256 amount);\\n    event DecreaseReservedAmount(address token, uint256 amount);\\n    event IncreaseGuaranteedUsd(address token, uint256 amount);\\n    event DecreaseGuaranteedUsd(address token, uint256 amount);\\n    /* Timelock.sol events */\\n    event SignalPendingAction(bytes32 action);\\n    event SignalApprove(address token, address spender, uint256 amount, bytes32 action);\\n    event SignalWithdrawToken(address target, address token, address receiver, uint256 amount, bytes32 action);\\n    event SignalMint(address token, address receiver, uint256 amount, bytes32 action);\\n    event SignalSetGov(address target, address gov, bytes32 action);\\n    event SignalSetHandler(address target, address handler, bool isActive, bytes32 action);\\n    event SignalSetPriceFeed(address vault, address priceFeed, bytes32 action);\\n    event SignalRedeemZkusd(address vault, address token, uint256 amount);\\n    event SignalVaultSetTokenConfig(\\n        address vault, address token, uint256 tokenDecimals,\\n        uint256 tokenWeight, uint256 minProfitBps, uint256 maxZkusdAmount,\\n        bool isStable, bool isShortable);\\n    event ClearAction(bytes32 action);\\n    /* ZkdlpManager.sol */\\n    event AddLiquidity(address account, address token, uint256 amount, uint256 aumInUsd, uint256 zkdlpSupply, uint256 zkusdAmount, uint256 mintAmount);\\n    event RemoveLiquidity(address account, address token, uint256 zkdlpAmount, uint256 aumInUsd, uint256 zkdlpSupply, uint256 zkusdAmount, uint256 amountOut);\\n    /* RewardRouterV2 */\\n    event StakeZkdx(address account, address token, uint256 amount);\\n    event UnstakeZkdx(address account, address token, uint256 amount);\\n    event StakeZkdlp(address account, uint256 amount);\\n    event UnstakeZkdlp(address account, uint256 amount);\\n\\n    /* OrderBook.sol */\\n    event CreateIncreaseOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address purchaseToken,\\n        uint256 purchaseTokenAmount,\\n        address collateralToken,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee\\n    );\\n\\n    event CancelIncreaseOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address purchaseToken,\\n        uint256 purchaseTokenAmount,\\n        address collateralToken,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee\\n    );\\n\\n    event ExecuteIncreaseOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address purchaseToken,\\n        uint256 purchaseTokenAmount,\\n        address collateralToken,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee,\\n        uint256 executionPrice\\n    );\\n\\n    event UpdateIncreaseOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address collateralToken,\\n        address indexToken,\\n        bool isLong,\\n        uint256 sizeDelta,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold\\n    );\\n\\n    event CreateDecreaseOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address collateralToken,\\n        uint256 collateralDelta,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee\\n    );\\n\\n    event CancelDecreaseOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address collateralToken,\\n        uint256 collateralDelta,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee\\n    );\\n\\n    event ExecuteDecreaseOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address collateralToken,\\n        uint256 collateralDelta,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold,\\n        uint256 executionFee,\\n        uint256 executionPrice\\n    );\\n\\n    event UpdateDecreaseOrder(\\n        address indexed account,\\n        uint256 orderIndex,\\n        address collateralToken,\\n        uint256 collateralDelta,\\n        address indexToken,\\n        uint256 sizeDelta,\\n        bool isLong,\\n        uint256 triggerPrice,\\n        bool triggerAboveThreshold\\n    );\\n}\\n\",\"keccak256\":\"0xb14324adc21f90ff9a454a2e41d9442cd7465ace6d56d3a874103dae635c0f0b\",\"license\":\"MIT\"},\"contracts/libraries/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x41b0da7db3e1f79b338824fed2bc4732430b78002a9d51c2cfa86ad5a12c2763\",\"license\":\"MIT\"},\"contracts/libraries/token/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xa3ce253082421a9e79d2b884ae6f60507b0cc73ea356674072091454c44cc556\",\"license\":\"MIT\"},\"contracts/peripherals/Timelock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\nimport \\\"../core/storage/TimelockStorage.sol\\\";\\n\\ncontract Timelock is TimelockStorage {\\n\\n    constructor(address _admin, uint256 _buffer, address _tokenManager, address _mintReceiver, address _zkdlpManager, uint256 _maxTokenSupply, uint256 _marginFeeBasisPoints, uint256 _maxMarginFeeBasisPoints) public {\\n        require(_buffer <= MAX_BUFFER, Errors.TIMELOCK_INVALID_BUFFER);\\n        admin = _admin;\\n        buffer = _buffer;\\n        tokenManager = _tokenManager;\\n        mintReceiver = _mintReceiver;\\n        zkdlpManager = _zkdlpManager;\\n        maxTokenSupply = _maxTokenSupply;\\n\\n        marginFeeBasisPoints = _marginFeeBasisPoints;\\n        maxMarginFeeBasisPoints = _maxMarginFeeBasisPoints;\\n    }\\n    /* onlyAdmin */\\n    function setAdmin(address _admin) external override onlyAdmin {\\n        admin = _admin;\\n    }\\n\\n    function setZkdlpManager(address _zkdlpManager) external onlyAdmin{\\n        zkdlpManager = _zkdlpManager;\\n    }\\n\\n    /* admin */\\n    function setExternalAdmin(address _target, address _admin) external onlyAdmin {\\n        require(_target != address(this), Errors.Timelock_Invalid_Target);\\n        IAdmin(_target).setAdmin(_admin);\\n    }\\n\\n    function setContractHandler(address _handler, bool _isActive) external onlyAdmin {\\n        isHandler[_handler] = _isActive;\\n    }\\n\\n    function setKeeper(address _keeper, bool _isActive) external onlyAdmin {\\n        isKeeper[_keeper] = _isActive;\\n    }\\n\\n    function setBuffer(uint256 _buffer) external onlyAdmin {\\n        require(_buffer <= MAX_BUFFER, Errors.Timelock_Invalid_Buffer);\\n        require(_buffer > buffer, Errors.Timelock_Buffer_Cannot_Be_Decreased);\\n        buffer = _buffer;\\n    }\\n\\n    function setMaxLeverage(address _vault, uint256 _maxLeverage) external onlyAdmin {\\n        IVault(_vault).setMaxLeverage(_maxLeverage);\\n    }\\n\\n    function setMaxGlobalShortSize(address _vault, address _token, uint256 _amount) external onlyAdmin {\\n        IVault(_vault).setMaxGlobalShortSize(_token, _amount);\\n    }\\n\\n    function setVaultUtils(address _vault, IVaultUtils _vaultUtils) external onlyAdmin {\\n        IVault(_vault).setVaultUtils(_vaultUtils);\\n    }\\n\\n    function setMaxGasPrice(address _vault, uint256 _maxGasPrice) external onlyAdmin {\\n        require(_maxGasPrice > 5000000000, Errors.TIMELOCK_INVALID_MAXGASPRICE);\\n        IVault(_vault).setMaxGasPrice(_maxGasPrice);\\n    }\\n\\n    function setInPrivateLiquidationMode(address _vault, bool _inPrivateLiquidationMode) external onlyAdmin {\\n        IVault(_vault).setInPrivateLiquidationMode(_inPrivateLiquidationMode);\\n    }\\n\\n    function setLiquidator(address _vault, address _liquidator, bool _isActive) external onlyAdmin {\\n        IVault(_vault).setLiquidator(_liquidator, _isActive);\\n    }\\n\\n    function setInPrivateTransferMode(address _token, bool _inPrivateTransferMode) external onlyAdmin {\\n        IBaseToken(_token).setInPrivateTransferMode(_inPrivateTransferMode);\\n    }\\n\\n    function setGov(address _target, address _gov) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"setGov\\\", _target, _gov));\\n        _validateAction(action);\\n        _clearAction(action);\\n        ITimelockTarget(_target).setGov(_gov);\\n    }\\n\\n    function setHandler(address _target, address _handler, bool _isActive) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"setHandler\\\", _target, _handler, _isActive));\\n        _validateAction(action);\\n        _clearAction(action);\\n        IHandlerTarget(_target).setHandler(_handler, _isActive);\\n    }\\n\\n    function setPriceFeed(address _vault, address _priceFeed) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"setPriceFeed\\\", _vault, _priceFeed));\\n        _validateAction(action);\\n        _clearAction(action);\\n        IVault(_vault).setPriceFeed(_priceFeed);\\n    }\\n\\n    function removeAdmin(address _token, address _account) external onlyAdmin {\\n        IYieldToken(_token).removeAdmin(_account);\\n    }\\n\\n    function withdrawFees(address _vault, address _token, address _receiver) external onlyAdmin {\\n        IVault(_vault).withdrawFees(_token, _receiver);\\n    }\\n\\n    function transferIn(address _sender, address _token, uint256 _amount) external onlyAdmin {\\n        IERC20(_token).transferFrom(_sender, address(this), _amount);\\n    }\\n\\n    function signalApprove(address _token, address _spender, uint256 _amount) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"approve\\\", _token, _spender, _amount));\\n        _setPendingAction(action);\\n        emit Events.SignalApprove(_token, _spender, _amount, action);\\n    }\\n\\n    function approve(address _token, address _spender, uint256 _amount) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"approve\\\", _token, _spender, _amount));\\n        _validateAction(action);\\n        _clearAction(action);\\n        IERC20(_token).approve(_spender, _amount);\\n    }\\n\\n    function signalWithdrawToken(address _target, address _token, address _receiver, uint256 _amount) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"withdrawToken\\\", _target, _token, _receiver, _amount));\\n        _setPendingAction(action);\\n        emit Events.SignalWithdrawToken(_target, _token, _receiver, _amount, action);\\n    }\\n\\n    function withdrawToken(address _target, address _token, address _receiver, uint256 _amount) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"withdrawToken\\\", _target, _token, _receiver, _amount));\\n        _validateAction(action);\\n        _clearAction(action);\\n        IBaseToken(_target).withdrawToken(_token, _receiver, _amount);\\n    }\\n\\n    function signalMint(address _token, address _receiver, uint256 _amount) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"mint\\\", _token, _receiver, _amount));\\n        _setPendingAction(action);\\n        emit Events.SignalMint(_token, _receiver, _amount, action);\\n    }\\n\\n    function processMint(address _token, address _receiver, uint256 _amount) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"mint\\\", _token, _receiver, _amount));\\n        _validateAction(action);\\n        _clearAction(action);\\n        _mint(_token, _receiver, _amount);\\n    }\\n\\n    function signalSetGov(address _target, address _gov) external override onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"setGov\\\", _target, _gov));\\n        _setPendingAction(action);\\n        emit Events.SignalSetGov(_target, _gov, action);\\n    }\\n\\n    function signalSetHandler(address _target, address _handler, bool _isActive) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"setHandler\\\", _target, _handler, _isActive));\\n        _setPendingAction(action);\\n        emit Events.SignalSetHandler(_target, _handler, _isActive, action);\\n    }\\n\\n    function signalSetPriceFeed(address _vault, address _priceFeed) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"setPriceFeed\\\", _vault, _priceFeed));\\n        _setPendingAction(action);\\n        emit Events.SignalSetPriceFeed(_vault, _priceFeed, action);\\n    }\\n\\n    function signalRedeemZkusd(address _vault, address _token, uint256 _amount) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"redeemZkusd\\\", _vault, _token, _amount));\\n        _setPendingAction(action);\\n        emit Events.SignalRedeemZkusd(_vault, _token, _amount);\\n    }\\n\\n    function redeemZkusd(address _vault, address _token, uint256 _amount) external onlyAdmin {\\n        bytes32 action = keccak256(abi.encodePacked(\\\"redeemZkusd\\\", _vault, _token, _amount));\\n        _validateAction(action);\\n        _clearAction(action);\\n        address zkusd = IVault(_vault).zkusd();\\n        IVault(_vault).setManager(address(this), true);\\n        IZKUSD(zkusd).addVault(address(this));\\n        IZKUSD(zkusd).mint(address(this), _amount);\\n        IERC20(zkusd).transfer(address(_vault), _amount);\\n        IVault(_vault).sellZKUSD(_token, mintReceiver);\\n        IVault(_vault).setManager(address(this), false);\\n        IZKUSD(zkusd).removeVault(address(this));\\n    }\\n\\n    function cancelAction(bytes32 _action) external onlyAdmin {\\n        _clearAction(_action);\\n    }\\n\\n    /* onlyKeeperAndAbove */\\n    function setFundingRate(address _vault, uint256 _fundingInterval, uint256 _fundingRateFactor, uint256 _stableFundingRateFactor) external onlyKeeperAndAbove {\\n        require(_fundingRateFactor <= MAX_FUNDING_RATE_FACTOR, Errors.Timelock_invalid_fundingRateFactor);\\n        require(_stableFundingRateFactor <= MAX_FUNDING_RATE_FACTOR, Errors.Timelock_invalid_stableFundingRateFactor);\\n        IVault(_vault).setFundingRate(_fundingInterval, _fundingRateFactor, _stableFundingRateFactor);\\n    }\\n\\n    function setSwapFees(\\n        address _vault, uint256 _taxBasisPoints, uint256 _stableTaxBasisPoints, uint256 _mintBurnFeeBasisPoints,\\n        uint256 _swapFeeBasisPoints, uint256 _stableSwapFeeBasisPoints) external onlyKeeperAndAbove {\\n        IVault vault = IVault(_vault);\\n        vault.setFees(\\n            _taxBasisPoints,\\n            _stableTaxBasisPoints,\\n            _mintBurnFeeBasisPoints,\\n            _swapFeeBasisPoints,\\n            _stableSwapFeeBasisPoints,\\n            maxMarginFeeBasisPoints,\\n            vault.liquidationFeeUsd(),\\n            vault.minProfitTime(),\\n            vault.hasDynamicFees()\\n        );\\n    }\\n\\n    function setFees(\\n        address _vault, uint256 _taxBasisPoints, uint256 _stableTaxBasisPoints,\\n        uint256 _mintBurnFeeBasisPoints, uint256 _swapFeeBasisPoints, uint256 _stableSwapFeeBasisPoints,\\n        uint256 _marginFeeBasisPoints, uint256 _liquidationFeeUsd, uint256 _minProfitTime, bool _hasDynamicFees) external onlyKeeperAndAbove {\\n        marginFeeBasisPoints = _marginFeeBasisPoints;\\n        IVault(_vault).setFees(\\n            _taxBasisPoints,\\n            _stableTaxBasisPoints,\\n            _mintBurnFeeBasisPoints,\\n            _swapFeeBasisPoints,\\n            _stableSwapFeeBasisPoints,\\n            maxMarginFeeBasisPoints,\\n            _liquidationFeeUsd,\\n            _minProfitTime,\\n            _hasDynamicFees\\n        );\\n    }\\n\\n    function setMinProfitTime(address _vault, uint256 _minProfitTime) external onlyKeeperAndAbove {\\n        IVault(_vault).setMinProfitTime(_minProfitTime);\\n    }\\n\\n    function setTokenConfig(\\n        address _vault,\\n        address _token,\\n        uint256 _tokenDecimals,\\n        uint256 _tokenWeight,\\n        uint256 _minProfitBps,\\n        uint256 _maxZkusdAmount,\\n        bool _isStable,\\n        bool _isShortable,\\n        bool _isEquity\\n    ) external onlyKeeperAndAbove {\\n        IVault(_vault).setTokenConfig(\\n            _token,\\n            _tokenDecimals,\\n            _tokenWeight,\\n            _minProfitBps,\\n            _maxZkusdAmount,\\n            _isStable,\\n            _isShortable,\\n            _isEquity\\n        );\\n    }\\n\\n    function clearTokenConfig(address _vault, address _token) external {\\n        IVault(_vault).clearTokenConfig(_token);\\n    }\\n\\n    function setAllowStableEquity(address _vault, bool _allowStaleEquityPrice) external onlyKeeperAndAbove {\\n        IVault(_vault).setAllowStableEquity(_allowStaleEquityPrice);\\n    }\\n\\n    function setBufferAmounts(address _vault, address[] memory _tokens, uint256[] memory _bufferAmounts) external onlyKeeperAndAbove {\\n        for (uint256 i = 0; i < _tokens.length; i++) {\\n            IVault(_vault).setBufferAmount(_tokens[i], _bufferAmounts[i]);\\n        }\\n    }\\n\\n    function setZkusdAmounts(address _vault, address[] memory _tokens, uint256[] memory _zkusdAmounts) external onlyKeeperAndAbove {\\n        for (uint256 i = 0; i < _tokens.length; i++) {\\n            IVault(_vault).setZkusdAmount(_tokens[i], _zkusdAmounts[i]);\\n        }\\n    }\\n\\n    function setIsSwapEnabled(address _vault, bool _isSwapEnabled) external onlyKeeperAndAbove {\\n        IVault(_vault).setIsSwapEnabled(_isSwapEnabled);\\n    }\\n\\n    function updateZkusdSupply(uint256 zkusdAmount) external onlyKeeperAndAbove {\\n        address zkusd = IZkdlpManager(zkdlpManager).zkUsd();\\n        uint256 balance = IERC20(zkusd).balanceOf(zkdlpManager);\\n        IZKUSD(zkusd).addVault(address(this));\\n        if (zkusdAmount > balance) {\\n            uint256 mintAmount = zkusdAmount.sub(balance);\\n            IZKUSD(zkusd).mint(zkdlpManager, mintAmount);\\n        } else {\\n            uint256 burnAmount = balance.sub(zkusdAmount);\\n            IZKUSD(zkusd).burn(zkdlpManager, burnAmount);\\n        }\\n        IZKUSD(zkusd).removeVault(address(this));\\n    }\\n\\n\\n\\n    function batchWithdrawFees(address _vault, address[] memory _tokens) external onlyKeeperAndAbove {\\n        for (uint256 i = 0; i < _tokens.length; i++) {\\n            IVault(_vault).withdrawFees(_tokens[i], admin);\\n        }\\n    }\\n\\n//    function batchSetBonusRewards(address _vester, address[] memory _accounts, uint256[] memory _amounts) external onlyKeeperAndAbove {\\n//        require(_accounts.length == _amounts.length, Errors.TIMELOCK_INVALID_LENGTHS);\\n//        if (!IHandlerTarget(_vester).isHandler(address(this))) {\\n//            IHandlerTarget(_vester).setHandler(address(this), true);\\n//        }\\n//        for (uint256 i = 0; i < _accounts.length; i++) {\\n//            address account = _accounts[i];\\n//            uint256 amount = _amounts[i];\\n//            IVester(_vester).setBonusRewards(account, amount);\\n//        }\\n//    }\\n\\n    /* onlyHandlerAndAbove */\\n    function setShouldToggleIsLeverageEnabled(bool _shouldToggleIsLeverageEnabled) external onlyHandlerAndAbove {\\n        shouldToggleIsLeverageEnabled = _shouldToggleIsLeverageEnabled;\\n    }\\n\\n    function setMarginFeeBasisPoints(uint256 _marginFeeBasisPoints, uint256 _maxMarginFeeBasisPoints) external onlyHandlerAndAbove {\\n        marginFeeBasisPoints = _marginFeeBasisPoints;\\n        maxMarginFeeBasisPoints = _maxMarginFeeBasisPoints;\\n    }\\n\\n    function setIsLeverageEnabled(address _vault, bool _isLeverageEnabled) external override onlyHandlerAndAbove {\\n        IVault(_vault).setIsLeverageEnabled(_isLeverageEnabled);\\n    }\\n\\n    function setZusd(address _vault, address _zusd) external onlyHandlerAndAbove {\\n        IVault(_vault).setZusd(_zusd);\\n    }\\n\\n    function enableLeverage(address _vault) external override onlyHandlerAndAbove {\\n        IVault vault = IVault(_vault);\\n        if (shouldToggleIsLeverageEnabled) {\\n            vault.setIsLeverageEnabled(true);\\n        }\\n        vault.setFees(\\n            vault.taxBasisPoints(),\\n            vault.stableTaxBasisPoints(),\\n            vault.mintBurnFeeBasisPoints(),\\n            vault.swapFeeBasisPoints(),\\n            vault.stableSwapFeeBasisPoints(),\\n            marginFeeBasisPoints,\\n            vault.liquidationFeeUsd(),\\n            vault.minProfitTime(),\\n            vault.hasDynamicFees()\\n        );\\n    }\\n\\n    function disableLeverage(address _vault) external override onlyHandlerAndAbove {\\n        IVault vault = IVault(_vault);\\n        if (shouldToggleIsLeverageEnabled) {\\n            vault.setIsLeverageEnabled(false);\\n        }\\n        vault.setFees(\\n            vault.taxBasisPoints(),\\n            vault.stableTaxBasisPoints(),\\n            vault.mintBurnFeeBasisPoints(),\\n            vault.swapFeeBasisPoints(),\\n            vault.stableSwapFeeBasisPoints(),\\n            maxMarginFeeBasisPoints, // marginFeeBasisPoints\\n            vault.liquidationFeeUsd(),\\n            vault.minProfitTime(),\\n            vault.hasDynamicFees()\\n        );\\n    }\\n\\n\\n    /* private */\\n    function _mint(address _token, address _receiver, uint256 _amount) private {\\n        IMintable mintable = IMintable(_token);\\n        if (!mintable.isMinter(address(this))) {\\n            mintable.setMinter(address(this), true);\\n        }\\n        mintable.mint(_receiver, _amount);\\n        require(IERC20(_token).totalSupply() <= maxTokenSupply, Errors.TIMELOCK_MAXTOKENSUPPLY_EXCEEDED);\\n    }\\n\\n    function _setPendingAction(bytes32 _action) private {\\n        require(pendingActions[_action] == 0, Errors.TIMELOCK_ACTION_ALREADY_SIGNALLED);\\n        pendingActions[_action] = block.timestamp.add(buffer);\\n        emit Events.SignalPendingAction(_action);\\n    }\\n\\n    function _validateAction(bytes32 _action) private view {\\n        require(pendingActions[_action] != 0, Errors.TIMELOCK_ACTION_NOT_SIGNALLED);\\n        require(pendingActions[_action] < block.timestamp, Errors.TIMELOCK_ACTION_TIME_NOT_YET_PASSED);\\n    }\\n\\n    function _clearAction(bytes32 _action) private {\\n        require(pendingActions[_action] != 0, Errors.TIMELOCK_INVALID_ACTION);\\n        delete pendingActions[_action];\\n        emit Events.ClearAction(_action);\\n    }\\n}\\n\",\"keccak256\":\"0xb412c3f4cef447253b36e07bef4f5ee00a56f11eafa1ee745c5f1e66092ce0c9\",\"license\":\"MIT\"},\"contracts/peripherals/interfaces/IHandlerTarget.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface IHandlerTarget {\\n    function isHandler(address _account) external returns (bool);\\n    function setHandler(address _handler, bool _isActive) external;\\n}\",\"keccak256\":\"0x2d1e8cc8420fcf64d41f4227a57ef12b526c928979f951a93ba9cfa188f97bb9\",\"license\":\"MIT\"},\"contracts/peripherals/interfaces/ITimelock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface ITimelock {\\n    function setAdmin(address _admin) external;\\n    function enableLeverage(address _vault) external;\\n    function disableLeverage(address _vault) external;\\n    function setIsLeverageEnabled(address _vault, bool _isLeverageEnabled) external;\\n    function signalSetGov(address _target, address _gov) external;\\n}\",\"keccak256\":\"0x2c58d4a0ad015c86ff4462573881844be781f7c64fb9323c5eefac550e2f33ad\",\"license\":\"MIT\"},\"contracts/peripherals/interfaces/ITimelockTarget.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface ITimelockTarget {\\n    function setGov(address _gov) external;\\n    function withdrawToken(address _token, address _account, uint256 _amount) external;\\n}\",\"keccak256\":\"0xca9d1bdf627466df3853026fa1ad8b2967fafbbeff356319b9de9da4a8c78c61\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IBaseToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface IBaseToken {\\n    function totalStaked() external view returns (uint256);\\n    function stakedBalance(address _account) external view returns (uint256);\\n    function removeAdmin(address _account) external;\\n    function setInPrivateTransferMode(bool _inPrivateTransferMode) external;\\n    function withdrawToken(address _token, address _account, uint256 _amount) external;\\n}\",\"keccak256\":\"0x0d3e508af43f1ecefb9543bfef0e021ba449bcdb955af200ab96ff091668c385\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IMintable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface IMintable {\\n    function isMinter(address _account) external returns (bool);\\n    function setMinter(address _minter, bool _isActive) external;\\n    function mint(address _account, uint256 _amount) external;\\n    function burn(address _account, uint256 _amount) external;\\n}\",\"keccak256\":\"0x1cb14f340029d7d16406d49987335f073a0c4006cff2c46fd66b3d2c8717e2f8\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IYieldToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface IYieldToken {\\n    function totalStaked() external view returns (uint256);\\n    function stakedBalance(address _account) external view returns (uint256);\\n    function removeAdmin(address _account) external;\\n}\",\"keccak256\":\"0xa5784e03f73a3ed49df871e79c9013fd9664a6cccecdf45714ffbfad62edcf8d\",\"license\":\"MIT\"},\"contracts/tokens/interfaces/IZKUSD.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\ninterface IZKUSD {\\n    function addVault(address _vault) external;\\n    function removeVault(address _vault) external;\\n    function mint(address _account, uint256 _amount) external;\\n    function burn(address _account, uint256 _amount) external;\\n}\",\"keccak256\":\"0xd559ec7a5a776135b7fcef14e614a4b4d79044727d3d8ef7f728d47f6567f816\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12391,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "buffer",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 12393,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "maxTokenSupply",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 12395,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "marginFeeBasisPoints",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 12397,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "maxMarginFeeBasisPoints",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 12399,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "shouldToggleIsLeverageEnabled",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 12401,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "admin",
        "offset": 1,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 12403,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "tokenManager",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 12405,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "mintReceiver",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 12407,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "zkdlpManager",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      },
      {
        "astId": 12411,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "pendingActions",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 12415,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "isHandler",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 12419,
        "contract": "contracts/peripherals/Timelock.sol:Timelock",
        "label": "isKeeper",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}